@import './_variables';

.w(@s) {
  .size(@s, width);
}

.h(@s) {
  .size(@s, height);
}

.full() {
  width: 100%;
  height: 100%;
}

.vertical(@s, @property) {
  .size(@s, ~'@{property}-top', ~'@{property}-bottom');
}

.horizontal(@s, @property) {
  .size(@s, ~'@{property}-left', ~'@{property}-right');
}

.border(@dir: bottom, @color: @GreyLight, @width: 1px, @style: solid)
when
(@dir =all) {
  border: @width @style @color;
}

.border(@dir: bottom, @color: @GreyLight, @width: 1px, @style: solid)
when
not
  (@dir =all) {
  border-@{dir}: @width @style @color;
}

.box() {
  box-sizing: border-box;
}

.bg(@color: @White) {
  background-color: @color;
}

.text-overflow(@overflowStyle: ellipsis) {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: @overflowStyle;
}

.block-center {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

// 字体
.font(@fontSize: @FontSize30, @color: @Black, @fontWeight: @FontNormal, @fontFamily: @PingFang-SC-Regular) {
  .size(@fontSize, font-size);
  .font-weight(@fontWeight);
  .font-number(@PingFang-SC-Regular);
  color: @color;
}

.size(@s, @rest...) {
  .loop(@iterator: 1) when (length(@rest) >=@iterator) {
    @property: extract(@rest, @iterator);
      @{property}: @s - 0rpx;
    .loop(@iterator + 1);
  }

  .loop(1);
}

.font-weight(@fontWeight: @FontBold) {
  font-weight: @fontWeight;
}

.font-number(@fontFamily: @PingFang-SC-Regular) {
  // font-family: @fontFamily;
}


.flex(@justifyContent: center, @alignItems: center, @direction: row) {
  display: flex;
  flex-direction: @direction;
  justify-content: @justifyContent;
  align-items: @alignItems;
}

// 针对line-height 安卓端胶囊按钮无法居中
.flexMiddle() {
  .flex();
  line-height: normal;
}

// line
.scale-hairline-common(@color, @top, @right , @bottom, @left) {
  content: '';
  position: absolute;
  background-color: @color;
  display: block;
  top: @top;
  right: @right;
  bottom: @bottom;
  left: @left;
}

.hairline(@direction, @color, @right, @left) when (@direction ='top') {
  &::before {
    .scale-hairline-common(@color, 0, @right, auto, @left);
    height: 1px;
    transform: scaleY(0.5);
  }
}

.hairline(@direction, @color) when (@direction ='right') {
  &::after {
    .scale-hairline-common(@color, 0, 0, 0, auto);
    width: 1px;
    transform: scaleX(0.5);
  }
}

.hairline(@direction, @color, @right: @space, @left: @space)
when
(@direction ='bottom') {
  &::after {
    .scale-hairline-common(@color, auto, @right, 0, @left);
    height: 1px;
    transform: scaleY(0.5);
  }
}

.hairline(@direction, @color) when (@direction ='left') {
  &::before {
    .scale-hairline-common(@color, 0, auto, 0, 0);
    width: 1px;
    transform: scaleX(0.5);
  }
}

// （1行/多行）省略号
.ellipsis(@line:1) {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: @line;
  -webkit-box-orient: vertical;
  word-break: break-all;
}
